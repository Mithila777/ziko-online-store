generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String           @id @default(cuid())
  name          String
  phone         String           @unique
  email         String           @unique
  address       String
  password      String
  emailVerified DateTime?
  image         String?
  role          String           @default("user")
  order         Order[]
  reviews       Review[]
  sessions      Session[]
  messages      ContactMessage[]
  // Replies made by admin (User with admin role)
  replies Reply[] @relation("AdminReplies")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Product {
  id          String      @id @default(cuid())
  name        String
  image       String
  description String
  price       Int
  quantity    Int
  category    String
  brand       String
  Model       String
  createdAt   DateTime    @default(now())
  discount    Int?
  orderItems  OrderItem[]
  reviews     Review[]
}

model Order {
  id              String      @id @default(cuid())
  createdAt       DateTime    @default(now())
  paymentMethod   String
  paymentStatus   String
  dailybariStatus String
  userId          String?
  totalCost       Int?
  user            User?       @relation(fields: [userId], references: [id])
  items           OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Review {
  id        String   @id @default(cuid())
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
  productId String
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model ContactMessage {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  name      String?
  email     String?
  subject   String?
  message   String
  createdAt DateTime @default(now())

  replies Reply[]
}

model Reply {
  id        String         @id @default(cuid())
  messageId String
  message   ContactMessage @relation(fields: [messageId], references: [id])
  adminId String
  admin   User   @relation("AdminReplies", fields: [adminId], references: [id]) 
  content   String
  createdAt DateTime @default(now())
}

model Blog {
  id        String   @id @default(cuid())
  title     String
  excerpt   String
  content   String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
